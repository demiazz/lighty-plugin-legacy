{"version":3,"file":null,"sources":["../src/transform-selector.js","../src/roles.js","../src/utils.js","../src/events.js","../src/query-selector.js","../src/index.js"],"sourcesContent":["/*\n * Regexps from jquery.role by Sasha Koss https://github.com/kossnocorp/role\n */\nexport default function transformSelector(selector) {\n  return selector\n    .replace(/@@([\\w\\u00c0-\\uFFFF-]+)/g, '[data-block~=\"$1\"]')\n    .replace(/@([\\w\\u00c0-\\uFFFF-]+)/g, '[data-role~=\"$1\"]');\n}\n","import $ from 'jquery';\n\nimport transformSelector from './transform-selector';\n\n\nfunction rewriteSelector(context, name, position) {\n  const original = context[name];\n\n  if (!original) {\n    return;\n  }\n\n  context[name] = function replaceAliases(...args) {\n    args[position] = transformSelector(args[position]);\n\n    return original.apply(context, args);\n  };\n\n  $.extend(context[name], original);\n}\n\nrewriteSelector($, 'find', 0);\nrewriteSelector($, 'multiFilter', 0);\nrewriteSelector($.find, 'matchesSelector', 1);\nrewriteSelector($.find, 'matches', 0);\n\n\nexport default function transform(component) {\n  const nodes = component.$('[data-role]');\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    const roles = node.attributes['data-role'].value.split(' ');\n\n    for (let j = 0; j < roles.length; j += 1) {\n      const role = roles[j];\n\n      if (!component[role]) {\n        component[role] = $();\n      }\n\n      if (component[role].jquery) {\n        component[role].push(node);\n      }\n    }\n  }\n}\n","function startsWithNative(string, substring) {\n  return string.startsWith(substring);\n}\n\nfunction startsWithPolyfill(string, substring) {\n  return string.substr(0, substring.length) === substring;\n}\n\nexport const startsWith = String.prototype.startsWith\n  ? startsWithNative\n  : startsWithPolyfill;\n\n\nfunction endsWithNative(string, substring) {\n  return string.endsWith(substring);\n}\n\nfunction endsWithPolyfill(string, substring) {\n  return string.substr(-substring.length) === substring;\n}\n\nexport const endsWith = String.prototype.endsWith\n  ? endsWithNative\n  : endsWithPolyfill;\n\n\nfunction includesNative(string, substring) {\n  return string.includes(substring);\n}\n\nfunction includesPolyfill(string, substring) {\n  return string.indexOf(substring) !== -1;\n}\n\nexport const includes = String.prototype.includes\n  ? includesNative\n  : includesPolyfill;\n","import $ from 'jquery';\n\nimport { startsWith, endsWith, includes } from './utils';\n\n\nfunction addBlockEventListener(component, property) {\n  const events = property.substr(3);\n  const listener = component[property];\n\n  component.block.on(events, function handleBlockEvent(e, ...data) {\n    if (e.currentTarget !== e.target) {\n      return;\n    }\n\n    listener.call(component, e, ...data);\n  });\n}\n\nlet loaded;\n\n$(window).on('load', (e) => {\n  loaded = e;\n});\n\nfunction addLoadEventListener(component, property) {\n  const listener = component[property];\n\n  if (!listener) {\n    return;\n  }\n\n  if (loaded) {\n    setTimeout(function handleLoadEvent() {\n      listener.call(component, loaded);\n    }, 1);\n  } else {\n    $(window).on('load', function handleLoadEvent(e) {\n      listener.call(component, e);\n    });\n  }\n}\n\nfunction addBodyEventListener(component, property) {\n  const events = property.split(' on ')[0];\n  const listener = component[property];\n\n  $('body').on(events, function handleBodyEvent(...args) {\n    listener.call(component, ...args);\n  });\n}\n\nfunction addWindowEventListener(component, property) {\n  const events = property.split(' on ')[0];\n  const listener = component[property];\n\n  $(window).on(events, function handleWindowEvent(...args) {\n    listener.call(component, ...args);\n  });\n}\n\nfunction addElementEventListener(component, property) {\n  const [events, selectors] = property.split(' on ');\n\n  if (!(events && selectors)) {\n    return;\n  }\n\n  const listener = component[property];\n\n  component.block.on(events, selectors, function handleEvent(...args) {\n    const [event] = args;\n\n    event.el = $(this);\n\n    listener.call(component, ...args);\n  });\n}\n\nfunction getEventListener(property) {\n  if (startsWith(property, 'on ')) {\n    return addBlockEventListener;\n  }\n\n  if (property === 'load on window') {\n    return addLoadEventListener;\n  }\n\n  if (endsWith(property, ' on body')) {\n    return addBodyEventListener;\n  }\n\n  if (endsWith(property, ' on window')) {\n    return addWindowEventListener;\n  }\n\n  if (includes(property, ' on ')) {\n    return addElementEventListener;\n  }\n\n  return null;\n}\n\n\nexport default function transform(component) {\n  Object.keys(component).forEach((property) => {\n    const addEventListener = getEventListener(property);\n\n    if (!addEventListener) {\n      return;\n    }\n\n    addEventListener(component, property);\n\n    delete component[property];\n  });\n}\n","import { querySelector as internalQuerySelector } from 'lighty';\n\nimport transformSelector from './transform-selector';\n\n\nexport default function querySelector(tree = document.body, selector) {\n  return internalQuerySelector(\n    typeof tree === 'string' ? transformSelector(tree) : tree,\n    transformSelector(selector)\n  );\n}\n","import $ from 'jquery';\nimport { plugin } from 'lighty';\n\nimport roles from './roles';\nimport events from './events';\nimport querySelector from './query-selector';\n\n\nfunction pluginInitializer() {\n  return function transform(component, node) {\n    component.block = $(node);\n\n    component.$ = function findInBlock(selector) {\n      return $(selector, component.block);\n    };\n\n    roles(component);\n    events(component);\n  };\n}\n\n\nexport { querySelector };\n\nexport default plugin('legacy', pluginInitializer);\n"],"names":["transformSelector","selector","replace","rewriteSelector","context","name","position","const","original","args","apply","$","extend","transform","component","let","nodes","i","length","node","roles","attributes","value","split","j","role","jquery","push","startsWithNative","string","substring","startsWith","startsWithPolyfill","substr","endsWithNative","endsWith","endsWithPolyfill","includesNative","includes","includesPolyfill","indexOf","addBlockEventListener","property","events","listener","block","on","e","currentTarget","target","call","data","addLoadEventListener","loaded","setTimeout","window","addBodyEventListener","addWindowEventListener","addElementEventListener","selectors","event","el","this","getEventListener","Object","keys","forEach","addEventListener","querySelector","tree","document","body","internalQuerySelector","pluginInitializer","find","String","prototype","plugin"],"mappings":"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"}